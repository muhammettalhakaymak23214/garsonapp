 /*
 Container(
              width: 350,
              height: 280,
              //color: Colors.amber,
              //alignment: Alignment.topCenter,
              child: ListView.builder(
                itemCount: (myList.length / 5).ceil(), // Satır sayısı
                itemBuilder: (BuildContext context, int rowIndex) {
                  return Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    //crossAxisAlignment: CrossAxisAlignment.start,
                    children: List.generate(
                      5,
                      (int columnIndex) {
                        final index = rowIndex * 5 + columnIndex;
                        if (index < myList.length) {
                          return GestureDetector(
                            onTap: () {
                              // Container tıklandığında yapılacak işlemler
                              print(index + 1);
                            },
                            child: Container(
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(5),
                                color: const Color.fromARGB(255, 255, 255, 255),
                              ),

                              height: 50,
                              width: 50,
                              margin: const EdgeInsets.all(10.0),
                              //  padding: const EdgeInsets.all(20.0),
                              alignment: Alignment.center,
                              child: Text(
                                myList[index],
                                style: const TextStyle(
                                    color: Color.fromRGBO(51, 51, 51, 100),
                                    fontSize: 20),
                              ),
                            ),
                          );
                        } else {
                          return Container(
                            height: 60,
                            width: 60,
                            margin: const EdgeInsets.all(5.0),
                          ); // Eksik elemanlar için boş Container
                        }
                      },
                    ),
                  );
                },
              ),
            ),

*/

           /* 

               // double screenWidth = MediaQuery.of(context).size.width;
------------------------------------
Ekran genişliği : 411.42857142857144
------------------------------------
Container(
                  padding: const EdgeInsets.all(0),
                  width: 250,
                  height: 310,
                  // color: Colors.amber,
                  alignment: Alignment.center,
                  child: ListView.builder(
                    itemCount: (myList.length / 4).ceil(), // Satır sayısı
                    itemBuilder: (BuildContext context, int rowIndex) {
                      return Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        //crossAxisAlignment: CrossAxisAlignment.center,
                        children: List.generate(
                          4,
                          (int columnIndex) {
                            final index = rowIndex * 4 + columnIndex;
                            if (index < myList.length) {
                              return GestureDetector(
                                onTap: () {
                                  // Container tıklandığında yapılacak işlemler
                                  print(index + 1);
                                },
                                child: Container(
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(5),
                                    color: const Color.fromARGB(
                                        255, 255, 255, 255),
                                  ),

                                  height: 50,
                                  width: 50,
                                  margin: const EdgeInsets.all(5.0),
                                  //  padding: const EdgeInsets.all(20.0),
                                  alignment: Alignment.center,
                                  child: Text(
                                    myList[index],
                                    style: const TextStyle(color: Colors.black),
                                  ),
                                ),
                              );
                            } else {
                              return Container(
                                height: 50,
                                width: 50,
                                margin: const EdgeInsets.all(5.0),
                              ); // Eksik elemanlar için boş Container
                            }
                          },
                        ),
                      );
                    },
                  ),
                ),
                */

                /*

                Container(
                  padding: const EdgeInsets.all(0),
                  width: 250,
                  height: 310,
                  alignment: Alignment.center,
                  child: ListView.builder(
                    itemCount: ((myList.length - startIndex) / 4).ceil(),
                    itemBuilder: (BuildContext context, int rowIndex) {
                      return Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: List.generate(
                          4,
                          (int columnIndex) {
                            final index =
                                rowIndex * 4 + columnIndex + startIndex;
                            if (index < myList.length) {
                              return GestureDetector(
                                onTap: () {
                                  print(myList[index]);
                                },
                                child: Container(
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(5),
                                    color: const Color.fromARGB(
                                        255, 255, 255, 255),
                                  ),
                                  height: 50,
                                  width: 50,
                                  margin: const EdgeInsets.all(5.0),
                                  alignment: Alignment.center,
                                  child: Text(
                                    myList[index],
                                    style: const TextStyle(color: Colors.black),
                                  ),
                                ),
                              );
                            } else {
                              return Container(
                                height: 50,
                                width: 50,
                                margin: const EdgeInsets.all(5.0),
                              );
                            }
                          },
                        ),
                      );
                    },
                  ),
                ),
                */

                /*

                mylist kullanılarak yapılan son yapı daha sonra mymap'e geçtim
                 Container(
              width: 350,
              height: 280,
              //color: Colors.amber,
              //alignment: Alignment.topCenter,
              child: ListView.builder(
                itemCount: (myList.length / 5).ceil(), // Satır sayısı
                itemBuilder: (BuildContext context, int rowIndex) {
                  return Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    //crossAxisAlignment: CrossAxisAlignment.start,
                    children: List.generate(
                      5,
                      (int columnIndex) {
                        final index = rowIndex * 5 + columnIndex;
                        if (index < myList.length) {
                          return GestureDetector(
                            onTap: () {
                              // Container tıklandığında yapılacak işlemler
                              print(index + 1);
                            },
                            child: Container(
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(5),
                                color: const Color.fromARGB(255, 255, 255, 255),
                              ),

                              height: 50,
                              width: 50,
                              margin: const EdgeInsets.all(10.0),
                              //  padding: const EdgeInsets.all(20.0),
                              alignment: Alignment.center,
                              child: Text(
                                myList[index],
                                style: const TextStyle(
                                    color: Color.fromRGBO(51, 51, 51, 100),
                                    fontSize: 20),
                              ),
                            ),
                          );
                        } else {
                          return Container(
                            height: 60,
                            width: 60,
                            margin: const EdgeInsets.all(5.0),
                          ); // Eksik elemanlar için boş Container
                        }
                      },
                    ),
                  );
                },
              ),
            ),
            */


            /*

/*
  final List<String> myList = [
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
  ];
  */

            */

            /*
//---------------
            Container(
              margin: EdgeInsets.all(0),
              decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(20.0),
                  color: Colors.white),
              //color: Colors.amber,
              height: 40,
              width: 150,
              alignment: Alignment.center,
              child: const Text(
                "Siparişler",
                style: TextStyle(),
              ),
            ),


            */




//-------------------giriş sayfası orjinal kodlar -------------------------
/*
//import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:garsonapp/sabitler/renkler.dart';
import 'package:garsonapp/sayfalar/ana_sayfa.dart';

class GirisSayfasi extends StatefulWidget {
  const GirisSayfasi({super.key});

  @override
  State<GirisSayfasi> createState() => _GirisSayfasiState();
}

class _GirisSayfasiState extends State<GirisSayfasi> {
  //
  TextEditingController controller = TextEditingController();
  TextEditingController controller2 = TextEditingController();
  String yazi = '';
  String yazi2 = '';

  //
  Color butonColor = const Color.fromARGB(255, 255, 255, 255);
  Color butonYaziRengi = siyahYaziRengi;
  //

  @override
  Widget build(BuildContext context) {
    bool isFilled1 = controller.text.isNotEmpty;
    bool isFilled2 = controller2.text.isNotEmpty;
    // Color buttonColor = isFilled1 && isFilled2 ? Colors.green : Colors.white;
    return Scaffold(
      backgroundColor: girisEkraniArkaPlanRengi,
      body: SingleChildScrollView(
        child: Center(
          child: Column(
            children: [
              const SizedBox(
                height: 50,
              ),
              Image.asset('assets/garson_logo.png', height: 300),
              SizedBox(
                width: 350,
                child: TextField(
                  onChanged: (value) {
                    setState(
                      () {
                        butonColor = isFilled1 && isFilled2
                            ? yesilButonRengi
                            : beyazButonRengi;
                        butonYaziRengi = isFilled1 && isFilled2
                            ? beyazYaziRengi
                            : siyahYaziRengi;
                      },
                    );
                  },
                  controller: controller,
                  decoration: InputDecoration(
                    hintText: "Kullanıcı Adı",
                    filled: true,
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(20.0),
                    ),
                  ),
                ),
              ),
              const SizedBox(
                height: 50,
              ),
              SizedBox(
                width: 350,
                child: TextField(
                  controller: controller2,
                  onChanged: (value) {
                    setState(
                      () {
                        butonColor = isFilled1 && isFilled2
                            ? yesilButonRengi
                            : beyazButonRengi;
                        butonYaziRengi = isFilled1 && isFilled2
                            ? beyazYaziRengi
                            : siyahYaziRengi;
                      },
                    );
                  },
                  decoration: InputDecoration(
                    hintText: "Parola",
                    filled: true,
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(20.0),
                    ),
                  ),
                ),
              ),
              const SizedBox(
                height: 50,
              ),
              SizedBox(
                width: 200,
                child: ElevatedButton(
                  onPressed: butonColor == yesilButonRengi
                      ? () {
                          setState(() {
                            yazi = controller.text;
                            yazi2 = controller2.text;

                            Navigator.of(context).push(
                              PageRouteBuilder(
                                pageBuilder:
                                    (context, animation, secondaryAnimation) =>
                                        const AnaSayfa(),
                                transitionsBuilder: (context, animation,
                                    secondaryAnimation, child) {
                                  var begin = const Offset(0.0, 1.0);
                                  var end = Offset.zero;
                                  var curve = Curves.ease;

                                  var tween = Tween(begin: begin, end: end)
                                      .chain(CurveTween(curve: curve));

                                  return SlideTransition(
                                    position: animation.drive(tween),
                                    child: child,
                                  );
                                },
                              ),
                            );
                          });
                        }
                      : () {},
                  style: ElevatedButton.styleFrom(
                    backgroundColor: butonColor,
                  ),
                  child: Text(
                    "Giriş Yap",
                    style: TextStyle(
                      color: butonYaziRengi,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ),

              //
              //
              //
              //-----------silinecek----------------------
              Text(
                yazi,
                style: const TextStyle(color: Colors.white),
              ),
              Text(
                yazi2,
                style: const TextStyle(color: Colors.white),
              ),
              //------------------------------------------------
              //
              //
              //
            ],
          ),
        ),
      ),
    );
  }
}

*/